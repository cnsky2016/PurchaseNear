// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `OrderService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package cn.purchasenear.service.buy.order;

public class OrderInfo implements Cloneable, java.io.Serializable
{
    public long id;

    public String ordercode;

    public long userid;

    public long goodsid;

    public int amount;

    public String address;

    public String receivername;

    public String receiverphone;

    public String receiveremail;

    public int orderstatus;

    public OrderInfo()
    {
    }

    public OrderInfo(long id, String ordercode, long userid, long goodsid, int amount, String address, String receivername, String receiverphone, String receiveremail, int orderstatus)
    {
        this.id = id;
        this.ordercode = ordercode;
        this.userid = userid;
        this.goodsid = goodsid;
        this.amount = amount;
        this.address = address;
        this.receivername = receivername;
        this.receiverphone = receiverphone;
        this.receiveremail = receiveremail;
        this.orderstatus = orderstatus;
    }

    public boolean
    equals(Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        OrderInfo _r = null;
        if(rhs instanceof OrderInfo)
        {
            _r = (OrderInfo)rhs;
        }

        if(_r != null)
        {
            if(id != _r.id)
            {
                return false;
            }
            if(ordercode != _r.ordercode)
            {
                if(ordercode == null || _r.ordercode == null || !ordercode.equals(_r.ordercode))
                {
                    return false;
                }
            }
            if(userid != _r.userid)
            {
                return false;
            }
            if(goodsid != _r.goodsid)
            {
                return false;
            }
            if(amount != _r.amount)
            {
                return false;
            }
            if(address != _r.address)
            {
                if(address == null || _r.address == null || !address.equals(_r.address))
                {
                    return false;
                }
            }
            if(receivername != _r.receivername)
            {
                if(receivername == null || _r.receivername == null || !receivername.equals(_r.receivername))
                {
                    return false;
                }
            }
            if(receiverphone != _r.receiverphone)
            {
                if(receiverphone == null || _r.receiverphone == null || !receiverphone.equals(_r.receiverphone))
                {
                    return false;
                }
            }
            if(receiveremail != _r.receiveremail)
            {
                if(receiveremail == null || _r.receiveremail == null || !receiveremail.equals(_r.receiveremail))
                {
                    return false;
                }
            }
            if(orderstatus != _r.orderstatus)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::Order::OrderInfo");
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, ordercode);
        __h = IceInternal.HashUtil.hashAdd(__h, userid);
        __h = IceInternal.HashUtil.hashAdd(__h, goodsid);
        __h = IceInternal.HashUtil.hashAdd(__h, amount);
        __h = IceInternal.HashUtil.hashAdd(__h, address);
        __h = IceInternal.HashUtil.hashAdd(__h, receivername);
        __h = IceInternal.HashUtil.hashAdd(__h, receiverphone);
        __h = IceInternal.HashUtil.hashAdd(__h, receiveremail);
        __h = IceInternal.HashUtil.hashAdd(__h, orderstatus);
        return __h;
    }

    public Object
    clone()
    {
        Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeLong(id);
        __os.writeString(ordercode);
        __os.writeLong(userid);
        __os.writeLong(goodsid);
        __os.writeInt(amount);
        __os.writeString(address);
        __os.writeString(receivername);
        __os.writeString(receiverphone);
        __os.writeString(receiveremail);
        __os.writeInt(orderstatus);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        id = __is.readLong();
        ordercode = __is.readString();
        userid = __is.readLong();
        goodsid = __is.readLong();
        amount = __is.readInt();
        address = __is.readString();
        receivername = __is.readString();
        receiverphone = __is.readString();
        receiveremail = __is.readString();
        orderstatus = __is.readInt();
    }

    public static final long serialVersionUID = 1150910212L;
}
